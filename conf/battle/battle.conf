//--------------------------------------------------------------
// Arquivo de Configuração de Batalha do rAthena
// Traduzido originalmente por Peter Kieser <pfak@telus.net>
// Adaptado para um inglês mais simples por Ancyker
//--------------------------------------------------------------
// Nota 1: Valor é um interruptor de configuração (on/off, yes/no ou 1/0)
// Nota 2: Valor está em porcentagem (100 significa 100%)
// Nota 3: Valor é um campo de bits. Se nenhuma descrição for dada,
//         assuma os tipos de unidade (1: Jogador, 2: Monstro, 4: Pet, 8: Homúnculo, 16: Mercenário, 128: NPC, 512: Elemental)
//--------------------------------------------------------------

// Quem deve ter um valor baseatk (faz com que STR afete o dano)? (Nota 3)
enable_baseatk: 0x9
enable_baseatk_renewal: 0x29F

// Quem pode ter esquiva perfeita? (Nota 3)
enable_perfect_flee: 1

// Quem pode realizar ataques críticos? (Nota 3)
// (Algumas habilidades sempre causam crítico, independentemente desta configuração)
enable_critical: 17

// Taxa de ajuste crítico para não-jogadores (Nota 2)
mob_critical_rate: 100
critical_rate: 100

// Quais tipos de unidade devem receber delay de movimento após ataques normais? (Nota 3)
// O delay é igual à 'animação de ataque' (amotion). O cliente já bloqueia
// o envio de comandos de movimento durante esse tempo, então para personagens controlados pelo cliente
// essa configuração é principalmente uma proteção contra edições do cliente.
// Monstros geralmente não são afetados, pois sua IA fica inativa durante a animação de ataque,
// a menos que você personalize a IA (veja monster_ai 0x2000 em monster.conf)
attack_walk_delay: 0

// Usar sistema legado de delay de movimento ao receber dano? (Nota 3)
// Oficialmente, ao ser atingido, você é apenas parado no centro da célula mais próxima.
// O delay de movimento afeta apenas o tempo que o monstro leva para reagir ao dano.
// O sistema legado impede comandos de movimento durante todo o tempo de delay,
// mas só se aplica se o alvo puder se mover por pelo menos esse tempo.
damage_walk_delay: 0

// Ajuste de delay de movimento após receber dano. (Nota 2)
// O delay de "não pode andar" após ser atingido é calculado como uma porcentagem da duração da animação de dano.
// Para monstros, esse delay também determina quanto tempo eles levam para reagir ao atacante.
pc_damage_walk_delay_rate: 20
damage_walk_delay_rate: 100

// Ajuste de delay de movimento para ataques múltiplos.
// Ao ser atingido por uma habilidade de múltiplos golpes como Lord of Vermillion ou Jupitel Thunder,
// o personagem ficará incapaz de se mover por "(número de golpes -1) * multihit_delay" milissegundos.
// Habilidades com mais de 10 golpes são consideradas como de 2 golpes.
// Esse delay também é adicionado ao tempo que o monstro espera para reagir ao atacante.
// Oficial: 200 | Athena Legado: 80
multihit_delay: 200

// Taxa de delay de dano para jogadores (Nota 2)
// Afeta o delay de dano enviado ao cliente e é o valor base para o delay de movimento.
player_damage_delay_rate: 100

// Sempre ter endure? (Nota 3)
// Os tipos de unidade definidos aqui não podem ser interrompidos por dano.
// Críticos não podem ser exibidos em alvos com endure devido a limitações do cliente.
// Isso significa que essa configuração torna impossível exibir críticos nesses tipos de unidade.
infinite_endure: 0

// Deve-se usar raça ou elemento para considerar alguém como morto-vivo?
// 0 = elemento morto-vivo
// 1 = raça morto-vivo
// 2 = ambos (qualquer um serve)
undead_detect_type: 0

// HP se recupera ao ser atingido por um atributo igual ao seu? (Nota 1)
attribute_recover: no

// Qual é a taxa mínima e máxima de acerto de ataques normais?
min_hitrate: 5
max_hitrate: 100

// Tipo de penalidade aplicada à FLEE quando mais de agi_penalty_count monstros atacam o jogador
// 0 = nenhuma penalidade
// 1 = agi_penalty_num é reduzido da FLEE como porcentagem
// 2 = agi_penalty_num é reduzido da FLEE como valor exato
agi_penalty_type: 1

// Quando a penalidade de agilidade está ativada, para quem ela se aplica? (Nota 3)
// Por padrão, apenas jogadores recebem a penalidade.
agi_penalty_target: 1

// Quantidade de inimigos necessária para que a penalidade de FLEE comece
agi_penalty_count: 3

// Quantidade de FLEE penalizada por cada monstro adicional além de agi_penalty_count
agi_penalty_num: 10

// Tipo de penalidade aplicada à DEF de equipamento e VIT quando mais de vit_penalty_count monstros atacam o jogador
// 0 = nenhuma penalidade
// 1 = vit_penalty_num é reduzido da DEF como porcentagem
// 2 = vit_penalty_num é reduzido da DEF como valor exato
vit_penalty_type: 1

// Quando a penalidade de VIT está ativada, para quem ela se aplica? (Nota 3)
// Por padrão, apenas jogadores recebem a penalidade.
vit_penalty_target: 1

// Quantidade de inimigos necessária para que a penalidade de defesa comece
vit_penalty_count: 3

// Quantidade de defesa penalizada por cada monstro adicional além de vit_penalty_count
vit_penalty_num: 5

// Usar método alternativo de cálculo de DEF para ataques físicos.
// 0 = desativado (usa redução normal def% com def2 adicional)
// 1 ou mais = defesa é subtraída como (DEF * valor).
// Exemplo: 10 + 50 def vira 0 + (10*tipo + 50)
weapon_defense_type: 0

// MDEF, mesmo que acima. (MDEF * valor)
magic_defense_type: 0

// Mudar direção do atacante para encarar o oponente em cada ataque? (Nota 3)
// OBS: Em servidores oficiais, o knockback de habilidades como Firewall é baseado
// na última direção movimentada. Mesmo atacando em outra direção, o knockback não muda.
// Monstros imóveis sempre são empurrados para o sul, pois sua direção padrão é norte.
attack_direction_change: 0

// Para os definidos, seu elemento de ataque é "sem elemento"
// (100% contra todos os elementos de defesa) (Nota 3)
// OBS: Essa configuração permite que não-jogadores causem dano total
// contra alvos do tipo Fantasma com ataques normais (ex: contra Ghostring).
attack_attr_none: 14

// Taxa base de quebra de equipamentos (antes de modificações por habilidades)
// 1 = 0.01% de chance. Padrão oficial: 0
equip_natural_break_rate: 0

// Taxa geral de quebra do próprio equipamento. (Nota 2)
// Afeta penalidades de habilidades como Power-Thrust e taxa natural.
// Se a habilidade de endow de um Sage falhar e essa taxa for maior que 0, a arma será quebrada.
equip_self_break_rate: 100

// Taxa geral de quebra do equipamento do alvo. (Nota 2)
// Afeta habilidades como Acid Terror e Meltdown.
equip_skill_break_rate: 100

// O dano deve ter um atraso antes de ser aplicado? (Nota 1)
// Algumas habilidades ignoram esse atraso por padrão.
// Configuração oficial: sim, mesmo que afete o desempenho.
delay_battle_damage: yes

// A sincronização do tempo de dano entre cliente e servidor deve ser ativada? (Nota 1)
// Não é comportamento oficial, mas reduz o lag de posição ao ser atingido por monstros.
// Afeta apenas ataques normais de monstros e tem prioridade sobre "delay_battle_damage".
// Muitas habilidades mostram o dano imediatamente, então desativar "delay_battle_damage"
// pode melhorar a experiência, mas não funciona para todas as habilidades.
// Cansado de levar Dark Illusion com 5 segundos de atraso? Ative isso.
synchronize_damage: no

// Flechas/munições são consumidas ao usar arco/arma de fogo?
// 0 = Não
// 1 = Sim
// 2 = Sim, mesmo para habilidades que não especificam consumo,
//     quando a habilidade é baseada em arma e usada com armas de longo alcance
arrow_decrement: 1

// A munição deve ser desequipada ao desequipar a arma?
// Comportamento oficial: sim
ammo_unequip: yes

// Uma arma adequada deve estar equipada ao equipar munição?
// Comportamento oficial: sim
ammo_check_weapon: yes

// O bônus de script de item 'Autospell' deve verificar alcance/obstáculos antes de conjurar?
// Comportamento oficial: não. Ao ativar, as habilidades respeitam seu alcance definido.
// Exemplo: Sonic Blow exige 2 células de distância antes de permitir autocast.
// Esta configuração também afeta autospellwhenhit.
autospell_check_range: no

// Se o atacante e o alvo estiverem na mesma célula, o alvo deve ser empurrado para a esquerda?
// Comportamento oficial: sim. Ao definir como "não", o alvo será empurrado para trás do atacante.
knockback_left: yes

// Jogadores podem usar Falcões e Wargs ao mesmo tempo? (Nota 1)
// Não é permitido nos servidores oficiais.
warg_can_falcon: no

// O alvo pode evitar dano ao usar snap para fugir para a borda da tela?
// Comportamento oficial: não
snap_dodge: no

// Habilidades/itens de jogadores podem "quebrar" equipamentos de unidades não-jogadoras? (Nota 1)
// Isso aplica o efeito de strip equip ao alvo não-jogador.
// OBS: WS_MELTDOWN é isento dessa verificação quando desativado.
// Oficial: não
break_mob_equip: no
